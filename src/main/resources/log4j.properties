# QUICK OVERVIEW: https://www.tutorialspoint.com/log4j/log4j_quick_guide.htm

# Logger is the object use in Java code to write to logs. It has parent/child hierarchy with a root logger at the top.
# Properties (eg, Level, Appenders) are inherited from parents, unless explicitly overridden.
# Appenders are added to Logger objects like:  log4j.logger.loggerName = LEVEL, Appender1, ...
# Appender have config set about how data is written - Formatting, Where it is written to etc. They are called by the logger.

# Root logger option
log4j.rootLogger=DEBUG, file, stdout

# Direct log messages to a log file
log4j.appender.file=org.apache.log4j.RollingFileAppender
log4j.appender.file.File=C:\\Users\\Fairooz\\Desktop\\Stack Testing\\logs\\Log.txt
log4j.appender.file.MaxFileSize=50MB
log4j.appender.file.layout=org.apache.log4j.PatternLayout
log4j.appender.file.layout.ConversionPattern=%d{yyyy-MM-dd HH:mm:ss} %-5p %c{1}:%L - %m%n

# Direct log messages to stdout - Console write.
log4j.appender.stdout=org.apache.log4j.ConsoleAppender
log4j.appender.stdout.Target=System.out
log4j.appender.stdout.layout=org.apache.log4j.PatternLayout
log4j.appender.stdout.layout.ConversionPattern=%d{HH:mm:ss} %-5p %C{1} - %m%n
# https://logging.apache.org/log4j/1.2/apidocs/org/apache/log4j/PatternLayout.html
# Percent sign: new column, then an optional formatting (eg. -20), then the letter of column data